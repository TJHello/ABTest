apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"


    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        packagingOptions {
            exclude 'META-INF/library_release.kotlin_module'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            consumerProguardFiles file('.').listFiles(new FilenameFilter() {
                @Override
                boolean accept(File file, String s) {
                    return s.endsWith('.pro')
                }
            })
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    compileOnly 'com.umeng.umsdk:game:9.1.0+G'
    compileOnly 'com.umeng.umsdk:common:9.1.6'
    compileOnly('com.umeng.umsdk:crash:0.0.5')
    compileOnly('com.umeng.umsdk:asms:1.1.3')


    compileOnly platform('com.google.firebase:firebase-bom:26.1.1')
    compileOnly 'com.google.firebase:firebase-config-ktx'
    compileOnly 'com.google.firebase:firebase-analytics-ktx'

    //gson
    implementation 'com.google.code.gson:gson:2.8.6'
}


ext.ver = '1.0.43'
ext.GROUP_ID = 'com.TJHello'
ext.POM_ARTIFACT_ID = 'ABTest'

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar) {
    getArchiveClassifier().set('sources')
    from android.sourceSets.main.java.source
}

artifacts {
    archives sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            Properties prop = System.getProperties()
            String os = prop.getProperty("os.name")
            if(os.contains("Windows")){
                repository(url: uri("C:\\Android\\unityWorkSpace\\ADEasyLib\\repo\\"))
            }else{
                repository(url: uri("/Users/TJHello/TJRepository/"))
            }
            pom.groupId = GROUP_ID
            pom.artifactId = POM_ARTIFACT_ID
            pom.version = ver
        }
    }
}